# Based on https://docs.docker.com/build/ci/github-actions/multi-platform/

name: build-ci-image

inputs:
  platform:
    default: null
    required: true
    type: string
  context:
    default: null
    required: true
    type: string
  build_args:
    default: null
    required: false
  image:
    default: null
    required: true
    type: string
  tags:
    default: null
    required: true
  username:
    default: null
    required: true
    type: string
  password:
    default: null
    required: true
    type: string
  title:
    default: null
    required: true
    type: string

runs:
  using: composite
  steps:
    - name: Prepare
      shell: bash
      run: |
        platform=${{ inputs.platform }}
        echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.image }}
        tags: ${{ inputs.tags }}
      labels: |
        org.opencontainers.image.authors=For inquiries, please use https://github.com/libfn/functional/issues
        org.opencontainers.image.documentation=https://libfn.org/ci/
        org.opencontainers.image.vendor=libfn.org
        org.opencontainers.image.title=libfn/ci/${{ inputs.title }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password  }}

    - name: Build and push by digest
      id: build
      uses: docker/build-push-action@v6
      with:
        platforms: ${{ inputs.platform }}
        build-args: ${{ inputs.build_args }}
        context: "{{defaultContext}}:${{ inputs.context }}"
        file: Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        outputs: type=image,name=${{ inputs.image }},push-by-digest=true,name-canonical=true,push=true
        sbom: true
        provenance: mode=max

    - name: Export digest
      shell: bash
      run: |
        mkdir -p /tmp/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "/tmp/digests/${digest#sha256:}"

    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ inputs.title }}-${{ env.PLATFORM_PAIR }}
        path: /tmp/digests/*
        if-no-files-found: error
        retention-days: 1
