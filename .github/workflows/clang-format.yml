name: clang-format

on:
  push:
    branches:
      - '*'
    paths:
      - '.github/**'
      - '*.cpp'
      - '*.hpp'
      - '*.ipp'
      - '.clang-format'

jobs:
  format-check:
    runs-on:
      group: default
    strategy:
      fail-fast: false
      matrix:
        release:
          - 18
    container: libfn/ci-build-clang:${{ matrix.release }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}
    steps:
    - uses: actions/checkout@v4

    - name: Check version
      run: |
        echo "CLANG_RELEASE=${{ matrix.release }}" >> $GITHUB_ENV
        CLANG_RELEASE=${{ matrix.release }}
        clang-format-${CLANG_RELEASE} --version | grep -F "clang-format version ${CLANG_RELEASE}"

    - name: Format source files
      run: |
        realpath .
        ls -al
        find include tests -type f \( -name '*.cpp' -o -name '*.hpp' -o -name '*.ipp' \) -print0 | xargs -0 clang-format-${CLANG_RELEASE} -i

    - name: Check for differences
      id: assert
      run: |
        realpath .
        ls -al
        git diff --exit-code | tee "clang-format.patch"

    - name: Upload patch
      if: failure() && steps.assert.outcome == 'failure'
      uses: actions/upload-artifact@v4
      continue-on-error: true
      with:
        name: clang-format.patch
        if-no-files-found: ignore
        path: clang-format.patch

    - name: What happened?
      if: failure() && steps.assert.outcome == 'failure'
      env:
        PREAMBLE: |
          If you are reading this, you are looking at a failed Github Actions
          job. That means you pushed one or more source files that did not conform
          to the formatting specified in .clang-format. That may be because
          you neglected to run 'git clang-format' or 'clang-format' before
          committing, or perhaps your version of clang-format is not compatible
          with the one on this machine, which is:
        SUGGESTION: |

          To fix it, you can do one of two things:
          1. Download and apply the patch generated as an artifact of this
             job to your repo, commit, and push.
          2. Run 'git-clang-format --extensions cpp,hpp,ipp main'
             in your repo, commit, and push.
      run: |
        echo "${PREAMBLE}"
        clang-format-${CLANG_RELEASE} --version
        echo "${SUGGESTION}"
        exit 1
